<?php

namespace common\models;

use common\behaviors\SlugBehavior;
use common\components\Categories;
use common\filemanager\behaviors\InputModelBehavior;
use common\filemanager\models\Files;
use common\modules\categories\behaviors\CategoryModelBehavior;
use common\modules\category\models\Category;
use common\modules\langs\components\ModelBehavior;
use common\modules\settings\models\Settings;
use common\modules\translit\LatinBehaviour;
use common\modules\translit\LatinTokenizer;
use common\modules\translit\TextInterpreter;

use jakharbek\filemanager\behaviors\FileRelationBehavior;
use yii\behaviors\AttributeBehavior;
use yii\behaviors\SluggableBehavior;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "post".
 *
 * @property int $id
 * @property string $title
 * @property string $link
 * @property string $image
 * @property int $status
 * @property int $type
 */
class Banner extends ActiveRecord
{
    const  TYPE_VERTICAL = 1;
    const  TYPE_HORIZONTAL = 2;
    const  STATUS_NO_ACTIVE = 1;
    const  STATUS_ACTIVE = 10;


    public static function tableName()
    {
        return 'banner';
    }

    public function behaviors()
    {
        return [
            TimestampBehavior::class,
            [
                'class' => SluggableBehavior::class,
                'attribute' => 'title'
            ],
            \common\components\InputModelBehavior::class,
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['link'], 'required'],
            [['status', 'created_at', 'updated_at', 'type'], 'integer'],
            [['title', 'link', 'slug', 'image'], 'string'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'slug' => 'Slug',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'type' => 'Type',
            'status' => 'Status',
            'image' => 'Files',
        ];
    }

    public function fields()
    {
        return ArrayHelper::merge(parent::fields(), [
            'image' => function () {
                if (!empty($this->image)) {
                    return $this->getImage()->all();
                }
            }
        ]);
    }

    public function getImage()
    {
        return \jakharbek\filemanager\models\Files::find()->andWhere(['id' => explode(',', $this->image)]);
    }

    public function beforeSave($insert)
    {
        if (strlen($this->image) > 0) {
            $this->image = preg_replace('/^,/s', null, $this->image);
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

}
